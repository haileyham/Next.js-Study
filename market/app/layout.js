import Link from 'next/link'
import './globals.css'
import { Inter } from 'next/font/google'

const inter = Inter({ subsets: ['latin'] })

export const metadata = {
    title: 'Create Next App',
    description: 'Generated by create next app',
}

export default function RootLayout({ children }) {
    return (
        <html lang="en">
            <body className={inter.className}>
                <nav className="navbar">
                    <Link href="/">홈</Link>
                    <Link href="/list">List</Link>
                    {/* Link : a태그와 같은데 조금 더 부드럽게 전환 */}
                    {/* 이동할 경로 적어줌 */}
                    {/* 페이지 전체에 공통적으로 적용할 것은 layout.js 여기에 작성
                    */}
                    {/* layout.js에 코드짜면 모든 페이지에 보이는 이유? layout.js가 옆에 있을 경우 page.js를 감싸고 있기 때문 */}
                    {/* page.js보여줄때 :
                    1. 옆에 layout.js있으면 그걸로 page.js 감쌈
                    2. 상위폴더에 layout.js 있으면 그걸로 1번을 감쌈 //그렇기때문에 현재 list폴더안에 page.js있고, layout.js없지만 상위폴더에서 감싸고 있음 //
                    즉 page.js 보여줄 때는 옆에, 상위에 있는 모든 layout.js 합쳐서 보여줌 //
                    결론은 페이지변경과 상관없이 계속 보여줄 UI는 layout.js 쓰는게 편할수도 */}
                    <Link href="/cart">Cart</Link>

                </nav>
                {children}
                {/* 이 children이 page.js가 들어가는 부분임 */}
            </body>
        </html>
    )
}
